name: sync-panther-analysis-from-upstream

on:
  schedule:
    - cron: "0 3,15 * * *"
  workflow_dispatch:

jobs:
  sync_with_upstream:
    if: github.repository != 'panther-labs/panther-analysis'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4.1.1
        with:
          ref: ${{ github.event.repository.default_branch }}
          fetch-depth: 0

      - name: Configure Git user
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"

      - name: Get the latest release from upstream
        id: get-latest-release
        uses: actions/github-script@v7.0.1
        with:
          script: |
            const response = await github.rest.repos.getLatestRelease({
              owner: 'panther-labs',
              repo: 'panther-analysis',
            });
            return response.data.tag_name

      - name: Add and fetch the latest release from upstream
        run: |
          git remote add upstream https://github.com/panther-labs/panther-analysis.git
          git fetch upstream --tags

      - name: Create branch for changes
        run: |
          git checkout -b conflicts/upstream-${{ github.run_id }}
          git reset --hard ${{ steps.get-latest-release.outputs.result }}
          git checkout ${{ github.event.repository.default_branch }} -- .github/workflows/
          git add -A

      - name: Check for changes
        id: check-for-changes
        run: |
          if ! git diff --cached --quiet; then
              echo "changes_exist=true" >> "$GITHUB_OUTPUT"
              git commit -m "Sync with panther-analysis release ${{ steps.get-latest-release.outputs.result }}"
              git push --set-upstream origin conflicts/upstream-${{ github.run_id }} --force
          else
              echo "changes_exist=false" >> "$GITHUB_OUTPUT"
              echo "No changes to commit, working tree clean."
          fi

      - name: Open PR for changes
        if: steps.check-for-changes.outputs.changes_exist == 'true'
        run: |
          PR_TITLE="Integrate panther-labs/panther-analysis release ${{ steps.get-latest-release.outputs.result }}"
          PR_BODY="Automated PR to sync with the latest release."
          git fetch origin ${{ github.event.repository.default_branch }}:local-default
          if git merge-base --is-ancestor local-default conflicts/upstream-${{ github.run_id }}; then
            echo "No merge conflicts detected."
          else
            PR_TITLE+=" [MERGE CONFLICTS]"
            PR_BODY+=" Merge conflicts need resolution."
          fi
          gh pr create --title "$PR_TITLE" \
                       --body "$PR_BODY" \
                       --head conflicts/upstream-${{ github.run_id }} \
                       --base ${{ github.event.repository.default_branch }} \
                       --repo ${{ github.repository }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}