name: sync-panther-analysis-from-upstream

on:
  schedule:
    - cron: "0 3,15 * * *"
  workflow_dispatch:

jobs:
  sync_with_upstream:
    if: github.repository != 'panther-labs/panther-analysis'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4.1.1
        with:
          ref: ${{ github.event.repository.default_branch }}
          fetch-depth: 0

      - name: Configure Git user
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
      - name: Add and fetch upstream
        run: |
          git remote add upstream https://github.com/panther-labs/panther-analysis.git
          git fetch upstream release
      - name: Create branch and reset excluding workflow changes
        run: |
          # Create a new branch for the changes
          git checkout -b conflicts/upstream-${{ github.run_id }}
          
          # Reset this new branch to match upstream/release
          git fetch upstream release
          git reset --hard upstream/release
          
          # Restore .github/workflows from the current default branch to exclude any workflow changes from upstream
          git checkout origin/${{ github.event.repository.default_branch }} -- .github/workflows/
          
          # Stage all changes after restoring .github/workflows
          git add -A
          
          # Commit if there are any changes to commit
          if git diff --cached --quiet; then
              echo "No changes to commit, working tree clean."
          else
              git commit -m "Sync with upstream/release, excluding workflow changes"
              git push --set-upstream origin conflicts/upstream-${{ github.run_id }} --force
          fi
      - name: Open PR for conflict resolution
        run: |
          # Check if the current branch diverges from the base branch
          if ! git diff --quiet origin/${{ github.event.repository.default_branch }}...conflicts/upstream-${{ github.run_id }}; then
            echo "Creating a pull request for conflict resolution"
            gh pr create --title "Resolve merge conflicts from upstream/release" \
                         --body "Automated PR to resolve conflicts." \
                         --head conflicts/upstream-${{ github.run_id }} \
                         --base ${{ github.event.repository.default_branch }} \
                         --label sync,automated-pr,conflicts \
                         --repo ${{ github.repository }}
          else
            echo "No changes to merge; no pull request created."
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
